# version: "3.9"

services:
  # API GATEWAY
  api-gateway:
    build:
      context: ../Back
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    container_name: api-gateway
    depends_on:
      - auth-service
      - user-service
      - media-service
      - playlist-service
      # - recommandation-service
      # - notification-service
    networks:
      - wpl_network
    volumes:
      - api_gateway_data:/app
    restart: unless-stopped

  # AUTH SERVICE
  auth-service:
    build:
      context: ../Back
      dockerfile: apps/auth-service/Dockerfile
    container_name: auth-service
    networks:
      - wpl_network
    volumes:
      - auth_data:/app
    restart: unless-stopped

  # USER SERVICE
  user-service:
    build:
      context: ../Back
      dockerfile: apps/user-service/Dockerfile
    container_name: user-service
    depends_on:
      - postgres
    networks:
      - wpl_network
    volumes:
      - user_data:/app
    restart: unless-stopped

  # MEDIA SERVICE
  media-service:
    build:
      context: ../Back
      dockerfile: apps/media-service/Dockerfile
    container_name: media-service
    depends_on:
      - neo4j
    networks:
      - wpl_network
    volumes:
      - media_data:/app
    restart: unless-stopped

  # PLAYLIST SERVICE
  playlist-service:
    build:
      context: ../Back
      dockerfile: apps/playlist-service/Dockerfile
    container_name: playlist-service
    depends_on:
      - neo4j
    networks:
      - wpl_network
    volumes:
      - playlist_data:/app
    restart: unless-stopped

  # # RECOMMANDATION SERVICE
  # recommandation-service:
  #   build:
  #     context: ../Back
  #     dockerfile: apps/recommandation-service/Dockerfile
  #   container_name: recommandation-service
  #   environment:
  #     JWT_SECRET: wpl_secret
  #     PORT: 3005
  #   networks:
  #     - wpl_network
  #   volumes:
  #     - recommandation_data:/app
  #   restart: unless-stopped

  # # NOTIFICATION SERVICE
  # notification-service:
  #   build:
  #     context: ../Back
  #     dockerfile: apps/notification-service/Dockerfile
  #   container_name: notification-service
  #   environment:
  #     JWT_SECRET: wpl_secret
  #     PORT: 3006
  #   networks:
  #     - wpl_network
  #   volumes:
  #     - notification_data:/app
  #   restart: unless-stopped

  # FRONTEND
  frontend:
    build:
      context: ../Front
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    # depends_on:
    #   - api-gateway
    container_name: wpl_frontend
    environment:
      - NGINX_HOST=localhost
    networks:
      - wpl_network
    restart: unless-stopped

  # PostgreSQL
  postgres:
    image: postgres:14
    container_name: wpl_postgres
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - wpl_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Neo4j
  neo4j:
    image: neo4j:5
    container_name: wpl_neo4j
    environment:
      NEO4J_AUTH: neo4j/wpl_pass
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - wpl_network
    volumes:
      - neo4j_data:/data
    restart: unless-stopped

  # Kafka Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: wpl_zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - wpl_network
    restart: unless-stopped

  # Kafka
  kafka:
    image: bitnami/kafka:latest
    container_name: wpl_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - wpl_network
    restart: unless-stopped

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: wpl-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - wpl_network
    restart: unless-stopped

networks:
  wpl_network:

volumes:
  frontend_data:
  api_gateway_data:
  auth_data:
  user_data:
  media_data:
  playlist_data:
  # recommandation_data:
  # notification_data:
  postgres_data:
  neo4j_data:
