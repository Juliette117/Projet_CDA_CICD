# version: '3.9'

services:

  # FRONTEND
  frontend:
    build:
      context: ../Front
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    container_name: wpl_frontend
    restart: unless-stopped

  # API GATEWAY
  api-gateway:
    build:
      context: ../Back
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - user-service
      # - media-service
      # - playlist-service
      # - recommandation-service
      # - notification-service
    container_name: api-gateway
    restart: unless-stopped

  # AUTH SERVICE
  auth-service:
    build:
      context: ../Back
      dockerfile: apps/auth-service/Dockerfile
    container_name: auth-service
    restart: unless-stopped

  # USER SERVICE
  user-service:
    build:
      context: ../Back
      dockerfile: apps/user-service/Dockerfile
    container_name: user-service
    restart: unless-stopped

  # MEDIA SERVICE (utilise Neo4j)
  # media-service:
  #   build:
  #     context: ../Back
  #     dockerfile: Dockerfile.media-service
  #   container_name: media-service
  #   depends_on:
  #     - neo4j
  #   restart: unless-stopped

  # # PLAYLIST SERVICE
  # playlist-service:
  #   build:
  #     context: ../Back
  #     dockerfile: Dockerfile.playlist-service
  #   container_name: playlist-service
  #   restart: unless-stopped

  # # RECOMMANDATION SERVICE
  # recommandation-service:
  #   build:
  #     context: ../Back
  #     dockerfile: Dockerfile.recommandation-service
  #   container_name: recommandation-service
  #   restart: unless-stopped

  # # NOTIFICATION SERVICE
  # notification-service:
  #   build:
  #     context: ../Back
  #     dockerfile: Dockerfile.notification-service
  #   container_name: notification-service
  #   restart: unless-stopped

  # # POSTGRESQL
  # postgres:
  #   image: postgres:14
  #   container_name: wpl_postgres
  #   environment:
  #     POSTGRES_DB: wpl_db
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # NEO4J
  neo4j:
    image: neo4j:5
    container_name: wpl_neo4j
    environment:
      NEO4J_AUTH: neo4j/wpl_pass
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: unless-stopped

  # ZOOKEEPER (pour Kafka)
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: wpl_zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    restart: unless-stopped

  # KAFKA
  kafka:
    image: bitnami/kafka:latest
    container_name: wpl_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    restart: unless-stopped

  # KAFKA UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: wpl-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped